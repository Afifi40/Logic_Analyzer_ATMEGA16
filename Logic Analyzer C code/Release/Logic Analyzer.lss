
Logic Analyzer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000188  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000001dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000001dc  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000020c  2**2
                  CONTENTS, READONLY
  4 .debug_info   000004e6  00000000  00000000  00000248  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000004a3  00000000  00000000  0000072e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000116  00000000  00000000  00000bd1  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000196  00000000  00000000  00000ce7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 c2 00 	jmp	0x184	; 0x184 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
  6c:	cf 93       	push	r28
  6e:	df 93       	push	r29
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62
  74:	27 97       	sbiw	r28, 0x07	; 7
  76:	0f b6       	in	r0, 0x3f	; 63
  78:	f8 94       	cli
  7a:	de bf       	out	0x3e, r29	; 62
  7c:	0f be       	out	0x3f, r0	; 63
  7e:	cd bf       	out	0x3d, r28	; 61
  80:	60 e8       	ldi	r22, 0x80	; 128
  82:	75 e2       	ldi	r23, 0x25	; 37
  84:	80 e0       	ldi	r24, 0x00	; 0
  86:	90 e0       	ldi	r25, 0x00	; 0
  88:	0e 94 6f 00 	call	0xde	; 0xde <UART_vInit>
  8c:	1a ba       	out	0x1a, r1	; 26
  8e:	f1 2c       	mov	r15, r1
  90:	01 e0       	ldi	r16, 0x01	; 1
  92:	10 e0       	ldi	r17, 0x00	; 0
  94:	89 b3       	in	r24, 0x19	; 25
  96:	8f 15       	cp	r24, r15
  98:	e9 f3       	breq	.-6      	; 0x94 <main+0x28>
  9a:	f9 b2       	in	r15, 0x19	; 25
  9c:	fe 01       	movw	r30, r28
  9e:	31 96       	adiw	r30, 0x01	; 1
  a0:	40 e0       	ldi	r20, 0x00	; 0
  a2:	50 e0       	ldi	r21, 0x00	; 0
  a4:	cf 01       	movw	r24, r30
  a6:	39 b3       	in	r19, 0x19	; 25
  a8:	b8 01       	movw	r22, r16
  aa:	04 2e       	mov	r0, r20
  ac:	02 c0       	rjmp	.+4      	; 0xb2 <main+0x46>
  ae:	66 0f       	add	r22, r22
  b0:	77 1f       	adc	r23, r23
  b2:	0a 94       	dec	r0
  b4:	e2 f7       	brpl	.-8      	; 0xae <main+0x42>
  b6:	23 2f       	mov	r18, r19
  b8:	30 e0       	ldi	r19, 0x00	; 0
  ba:	26 23       	and	r18, r22
  bc:	37 23       	and	r19, r23
  be:	04 2e       	mov	r0, r20
  c0:	02 c0       	rjmp	.+4      	; 0xc6 <main+0x5a>
  c2:	35 95       	asr	r19
  c4:	27 95       	ror	r18
  c6:	0a 94       	dec	r0
  c8:	e2 f7       	brpl	.-8      	; 0xc2 <main+0x56>
  ca:	20 5d       	subi	r18, 0xD0	; 208
  cc:	21 93       	st	Z+, r18
  ce:	4f 5f       	subi	r20, 0xFF	; 255
  d0:	5f 4f       	sbci	r21, 0xFF	; 255
  d2:	48 30       	cpi	r20, 0x08	; 8
  d4:	51 05       	cpc	r21, r1
  d6:	39 f7       	brne	.-50     	; 0xa6 <main+0x3a>
  d8:	0e 94 8b 00 	call	0x116	; 0x116 <UART_vSendstring>
  dc:	db cf       	rjmp	.-74     	; 0x94 <main+0x28>

000000de <UART_vInit>:
  de:	9b 01       	movw	r18, r22
  e0:	ac 01       	movw	r20, r24
  e2:	84 e0       	ldi	r24, 0x04	; 4
  e4:	22 0f       	add	r18, r18
  e6:	33 1f       	adc	r19, r19
  e8:	44 1f       	adc	r20, r20
  ea:	55 1f       	adc	r21, r21
  ec:	8a 95       	dec	r24
  ee:	d1 f7       	brne	.-12     	; 0xe4 <UART_vInit+0x6>
  f0:	60 e0       	ldi	r22, 0x00	; 0
  f2:	72 e1       	ldi	r23, 0x12	; 18
  f4:	8a e7       	ldi	r24, 0x7A	; 122
  f6:	90 e0       	ldi	r25, 0x00	; 0
  f8:	0e 94 a0 00 	call	0x140	; 0x140 <__udivmodsi4>
  fc:	21 50       	subi	r18, 0x01	; 1
  fe:	31 09       	sbc	r19, r1
 100:	30 bd       	out	0x20, r19	; 32
 102:	29 b9       	out	0x09, r18	; 9
 104:	53 9a       	sbi	0x0a, 3	; 10
 106:	54 9a       	sbi	0x0a, 4	; 10
 108:	86 e8       	ldi	r24, 0x86	; 134
 10a:	80 bd       	out	0x20, r24	; 32
 10c:	08 95       	ret

0000010e <UART_vSendData>:
 10e:	5d 9b       	sbis	0x0b, 5	; 11
 110:	fe cf       	rjmp	.-4      	; 0x10e <UART_vSendData>
 112:	8c b9       	out	0x0c, r24	; 12
 114:	08 95       	ret

00000116 <UART_vSendstring>:
 116:	cf 93       	push	r28
 118:	df 93       	push	r29
 11a:	ec 01       	movw	r28, r24
 11c:	89 91       	ld	r24, Y+
 11e:	88 23       	and	r24, r24
 120:	61 f0       	breq	.+24     	; 0x13a <UART_vSendstring+0x24>
 122:	0e 94 87 00 	call	0x10e	; 0x10e <UART_vSendData>
 126:	2f ef       	ldi	r18, 0xFF	; 255
 128:	80 e7       	ldi	r24, 0x70	; 112
 12a:	92 e0       	ldi	r25, 0x02	; 2
 12c:	21 50       	subi	r18, 0x01	; 1
 12e:	80 40       	sbci	r24, 0x00	; 0
 130:	90 40       	sbci	r25, 0x00	; 0
 132:	e1 f7       	brne	.-8      	; 0x12c <UART_vSendstring+0x16>
 134:	00 c0       	rjmp	.+0      	; 0x136 <UART_vSendstring+0x20>
 136:	00 00       	nop
 138:	f1 cf       	rjmp	.-30     	; 0x11c <UART_vSendstring+0x6>
 13a:	df 91       	pop	r29
 13c:	cf 91       	pop	r28
 13e:	08 95       	ret

00000140 <__udivmodsi4>:
 140:	a1 e2       	ldi	r26, 0x21	; 33
 142:	1a 2e       	mov	r1, r26
 144:	aa 1b       	sub	r26, r26
 146:	bb 1b       	sub	r27, r27
 148:	fd 01       	movw	r30, r26
 14a:	0d c0       	rjmp	.+26     	; 0x166 <__udivmodsi4_ep>

0000014c <__udivmodsi4_loop>:
 14c:	aa 1f       	adc	r26, r26
 14e:	bb 1f       	adc	r27, r27
 150:	ee 1f       	adc	r30, r30
 152:	ff 1f       	adc	r31, r31
 154:	a2 17       	cp	r26, r18
 156:	b3 07       	cpc	r27, r19
 158:	e4 07       	cpc	r30, r20
 15a:	f5 07       	cpc	r31, r21
 15c:	20 f0       	brcs	.+8      	; 0x166 <__udivmodsi4_ep>
 15e:	a2 1b       	sub	r26, r18
 160:	b3 0b       	sbc	r27, r19
 162:	e4 0b       	sbc	r30, r20
 164:	f5 0b       	sbc	r31, r21

00000166 <__udivmodsi4_ep>:
 166:	66 1f       	adc	r22, r22
 168:	77 1f       	adc	r23, r23
 16a:	88 1f       	adc	r24, r24
 16c:	99 1f       	adc	r25, r25
 16e:	1a 94       	dec	r1
 170:	69 f7       	brne	.-38     	; 0x14c <__udivmodsi4_loop>
 172:	60 95       	com	r22
 174:	70 95       	com	r23
 176:	80 95       	com	r24
 178:	90 95       	com	r25
 17a:	9b 01       	movw	r18, r22
 17c:	ac 01       	movw	r20, r24
 17e:	bd 01       	movw	r22, r26
 180:	cf 01       	movw	r24, r30
 182:	08 95       	ret

00000184 <_exit>:
 184:	f8 94       	cli

00000186 <__stop_program>:
 186:	ff cf       	rjmp	.-2      	; 0x186 <__stop_program>
